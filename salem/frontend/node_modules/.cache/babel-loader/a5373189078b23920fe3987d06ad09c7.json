{"ast":null,"code":"var _jsxFileName = \"/home/files/hybrid_pojects/SALEM/frontend/src/Components/Clients/ChambresDetails/DiscreteSlider1.js\";\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography'; // import Slider from '@material-ui/lab/Slider';\n\nimport { Slider } from '@material-ui/core';\nimport SimpleSnackbar from './SimpleSnackbar';\nexport default class DiscreteSlider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      marks: [{\n        value: 0,\n        label: '0°C'\n      }, {\n        value: 20,\n        label: '20°C'\n      }, {\n        value: 37,\n        label: '37°C'\n      }, {\n        value: 100,\n        label: '100°C'\n      }],\n      value: ''\n    };\n  }\n\n  valuetext(value) {\n    return \"\".concat(value, \"\\xB0C\");\n  } // newvalue(e){\n  //   var stock = e.target.children[2]\n  //   console.log(stock.valu)\n  //   this.setState({\n  //     value: 30\n  //   })\n  // }\n\n\n  valueLabelFormat(value) {\n    return this.state.marks.findIndex(mark => mark.value === value) + 1;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        width: 500,\n        margin: 'auto',\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(SimpleSnackbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      id: \"discrete-slider-restrict\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Choisir la Temperature\"), React.createElement(Slider, {\n      defaultValue: 20,\n      valueLabelFormat: this.valueLabelFormat.bind(this),\n      getAriaValueText: this.valuetext.bind(this),\n      getSliderValue: key => console.log(key),\n      \"aria-labelledby\": \"discrete-slider-restrict\",\n      step: null,\n      valueLabelDisplay: \"auto\",\n      marks: this.state.marks // onChange={this.newvalue.bind(this)}\n      // value={this.state.value}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/files/hybrid_pojects/SALEM/frontend/src/Components/Clients/ChambresDetails/DiscreteSlider1.js"],"names":["React","Typography","Slider","SimpleSnackbar","DiscreteSlider","Component","constructor","props","state","marks","value","label","valuetext","valueLabelFormat","findIndex","mark","render","width","margin","marginTop","bind","key","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB,C,CACA;;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAGA,eAAe,MAAMC,cAAN,SAA6BJ,KAAK,CAACK,SAAnC,CAA6C;AAC1DC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAG,CACN;AACEC,QAAAA,KAAK,EAAE,CADT;AAEEC,QAAAA,KAAK,EAAE;AAFT,OADM,EAKN;AACED,QAAAA,KAAK,EAAE,EADT;AAEEC,QAAAA,KAAK,EAAE;AAFT,OALM,EASN;AACED,QAAAA,KAAK,EAAE,EADT;AAEEC,QAAAA,KAAK,EAAE;AAFT,OATM,EAaN;AACED,QAAAA,KAAK,EAAE,GADT;AAEEC,QAAAA,KAAK,EAAE;AAFT,OAbM,CADG;AAmBXD,MAAAA,KAAK,EAAC;AAnBK,KAAb;AAqBD;;AAEDE,EAAAA,SAAS,CAACF,KAAD,EAAO;AACd,qBAAUA,KAAV;AACD,GA5ByD,CA8B1D;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAG,EAAAA,gBAAgB,CAACH,KAAD,EAAQ;AACtB,WAAO,KAAKF,KAAL,CAAWC,KAAX,CAAiBK,SAAjB,CAA2BC,IAAI,IAAIA,IAAI,CAACL,KAAL,KAAeA,KAAlD,IAA2D,CAAlE;AACD;;AAEDM,EAAAA,MAAM,GAAE;AAEN,WACE;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE,GAAR;AAAaC,QAAAA,MAAM,EAAE,MAArB;AAA6BC,QAAAA,SAAS,EAAE;AAAxC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,UAAD;AAAY,MAAA,EAAE,EAAC,0BAAf;AAA0C,MAAA,YAAY,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAHF,EAME,oBAAC,MAAD;AACE,MAAA,YAAY,EAAE,EADhB;AAEE,MAAA,gBAAgB,EAAE,KAAKN,gBAAL,CAAsBO,IAAtB,CAA2B,IAA3B,CAFpB;AAGE,MAAA,gBAAgB,EAAE,KAAKR,SAAL,CAAeQ,IAAf,CAAoB,IAApB,CAHpB;AAIE,MAAA,cAAc,EAAGC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJ3B;AAKE,yBAAgB,0BALlB;AAME,MAAA,IAAI,EAAE,IANR;AAOE,MAAA,iBAAiB,EAAC,MAPpB;AAQE,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAWC,KARpB,CASE;AACA;AAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAqBD;;AAjEyD","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n// import Slider from '@material-ui/lab/Slider';\nimport { Slider } from '@material-ui/core';\nimport SimpleSnackbar from './SimpleSnackbar';\n\n\nexport default class DiscreteSlider extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      marks : [\n        {\n          value: 0,\n          label: '0°C',\n        },\n        {\n          value: 20,\n          label: '20°C',\n        },\n        {\n          value: 37,\n          label: '37°C',\n        },\n        {\n          value: 100,\n          label: '100°C',\n        },\n      ],\n      value:''\n    }\n  }\n\n  valuetext(value){\n    return `${value}°C`;\n  }\n\n  // newvalue(e){\n  //   var stock = e.target.children[2]\n  //   console.log(stock.valu)\n  //   this.setState({\n  //     value: 30\n  //   })\n  // }\n\n  valueLabelFormat(value) {\n    return this.state.marks.findIndex(mark => mark.value === value) + 1;\n  }\n\n  render(){\n\n    return (\n      <div style={{width: 500, margin: 'auto', marginTop: 10}}>\n        <SimpleSnackbar/>\n        <div/>\n        <Typography id=\"discrete-slider-restrict\" gutterBottom>\n          Choisir la Temperature\n        </Typography>\n        <Slider\n          defaultValue={20}\n          valueLabelFormat={this.valueLabelFormat.bind(this)}\n          getAriaValueText={this.valuetext.bind(this)}\n          getSliderValue={(key) => console.log(key)}\n          aria-labelledby=\"discrete-slider-restrict\"\n          step={null}\n          valueLabelDisplay=\"auto\"\n          marks={this.state.marks}\n          // onChange={this.newvalue.bind(this)}\n          // value={this.state.value}\n        />\n      </div>\n    );\n  }\n}\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}