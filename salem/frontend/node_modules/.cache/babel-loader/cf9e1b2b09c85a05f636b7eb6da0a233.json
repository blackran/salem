{"ast":null,"code":"import _defineProperty from \"/home/files/hybrid_pojects/SALEM/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from 'axios';\nimport shortid from 'shortid';\nimport { ADD_TYPES, DELETE_TYPES, UPDATE_TYPES, FETCH_TYPES, UPDATE_ONE, ON_CHANGE_TYPES } from '../Actions/typesTypes';\nimport { urlHeader } from '../Actions/config';\nconst initState = {\n  dataTypes: [// {\n    // \t\tNumType:1,\n    // \t  NomType:\"Simple\",\n    // \t  DescriptionType: \"je ne peux pas resoudre cette exo.\"\n    // },\n    // {\n    // \t\tNumType:2,\n    // \t  NomType:\"Double\",\n    // \t  DescriptionType: \"je ne peux pas resoudre cette exo.\"\n    // },\n    // {\n    // \t\tNumType:3,\n    // \t  NomType:\"Double single\",\n    // \t  DescriptionType: \"je ne peux pas resoudre cette exo.\"\n    // },\n    // {\n    // \t\tNumType:4,\n    // \t  NomType:\"Double Triple\",\n    // \t  DescriptionType: \"je ne peux pas resoudre cette exo.\"\n    // },\n    // {\n    // \t\tNumType:5,\n    // \t  NomType:\"Familiale\",\n    // \t  DescriptionType: \"je ne peux pas resoudre cette exo.\"\n    // }\n  ],\n  mocksTypes: '',\n  one: true,\n  submitReusit: true,\n  changes: {\n    NumType: \"\",\n    NomType: \"\",\n    DescriptionType: \"\"\n  }\n};\n\nconst TypesReducers = (state = initState, action) => {\n  switch (action.type) {\n    case ADD_TYPES:\n      state.changes[\"NumClient\"] = shortid.generate();\n      state.changes[\"AnneeCreClient\"] = new Date().getFullYear();\n      const std = [_objectSpread({}, state.changes)];\n      axios.post(urlHeader + \"Types/post\", std).then(h => console.log(h)).catch(err => console.log(\"error parsing:\\n\", err));\n      state.dataTypes = [...state.dataTypes, state.changes];\n      return Object.assign({}, state, state.Types);\n\n    case DELETE_TYPES:\n      const st = state.dataTypes.filter(e => {\n        return e.NumClient !== action.id;\n      });\n      state.dataTypes = [...st];\n      axios.delete(urlHeader + \"Types/delete/\" + action.id).then(e => console.log(e)).catch(err => console.log(\"error parsing:\\n\", err));\n      return Object.assign({}, state, state.dataTypes);\n\n    case UPDATE_TYPES:\n      const std1 = state.dataTypes.filter(e => {\n        return e.id !== action.id;\n      });\n      const sto1 = action.data;\n      state.dataTypes = [...std1, ...sto1];\n      axios.put(urlHeader + \"Types/put/\" + action.id).then(e => console.log(e)).catch(err => console.log(\"error parsing:\\n\", err));\n      return Object.assign({}, state, state.dataTypes);\n\n    case FETCH_TYPES:\n      state.dataTypes = [];\n      state.dataTypes = [...action.data];\n      return Object.assign({}, state, state.dataTypes);\n\n    case UPDATE_ONE:\n      state.one = action.data;\n      return Object.assign({}, state, state.one);\n\n    case ON_CHANGE_TYPES:\n      state.changes[action.data.name] = action.data.value;\n      return Object.assign({}, state, state.changes);\n\n    default:\n      return state;\n  }\n};\n\nexport default TypesReducers;","map":{"version":3,"sources":["/home/files/hybrid_pojects/SALEM/frontend/src/reducers/TypesReducers.js"],"names":["axios","shortid","ADD_TYPES","DELETE_TYPES","UPDATE_TYPES","FETCH_TYPES","UPDATE_ONE","ON_CHANGE_TYPES","urlHeader","initState","dataTypes","mocksTypes","one","submitReusit","changes","NumType","NomType","DescriptionType","TypesReducers","state","action","type","generate","Date","getFullYear","std","post","then","h","console","log","catch","err","Object","assign","Types","st","filter","e","NumClient","id","delete","std1","sto1","data","put","name","value"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport shortid from 'shortid';\nimport {ADD_TYPES, DELETE_TYPES, UPDATE_TYPES, FETCH_TYPES, UPDATE_ONE, ON_CHANGE_TYPES} from '../Actions/typesTypes';\nimport {urlHeader} from '../Actions/config';\n\nconst initState = {\n\tdataTypes: [\n\t\t// {\n\t\t// \t\tNumType:1,\n\t\t// \t  NomType:\"Simple\",\n\t\t// \t  DescriptionType: \"je ne peux pas resoudre cette exo.\"\n\t\t// },\n\t\t// {\n\t\t// \t\tNumType:2,\n\t\t// \t  NomType:\"Double\",\n\t\t// \t  DescriptionType: \"je ne peux pas resoudre cette exo.\"\n\t\t// },\n\t\t// {\n\t\t// \t\tNumType:3,\n\t\t// \t  NomType:\"Double single\",\n\t\t// \t  DescriptionType: \"je ne peux pas resoudre cette exo.\"\n\t\t// },\n\t\t// {\n\t\t// \t\tNumType:4,\n\t\t// \t  NomType:\"Double Triple\",\n\t\t// \t  DescriptionType: \"je ne peux pas resoudre cette exo.\"\n\t\t// },\n\t\t// {\n\t\t// \t\tNumType:5,\n\t\t// \t  NomType:\"Familiale\",\n\t\t// \t  DescriptionType: \"je ne peux pas resoudre cette exo.\"\n\t\t// }\n\t],\n\tmocksTypes: '',\n\tone: true,\n\tsubmitReusit: true,\n\tchanges : {\n    NumType:\"\",\n    NomType:\"\",\n    DescriptionType: \"\"\n\t}\n}\n\nconst TypesReducers = (state = initState, action) => {\n\tswitch (action.type) {\n\t\tcase ADD_TYPES:\n\t\t\tstate.changes[\"NumClient\"] = shortid.generate();\n\t\t\tstate.changes[\"AnneeCreClient\"] = new Date().getFullYear();\n\t\t\tconst std = [{\n\t\t\t\t...state.changes\n\t\t\t}]\n\t\t\taxios.post(urlHeader+\"Types/post\", std).then(h => console.log(h)).catch(err => console.log(\"error parsing:\\n\", err));\n\t\t\tstate.dataTypes = [\n\t\t\t\t...state.dataTypes, state.changes\n\t\t\t];\n\t\t\treturn Object.assign({}, state, state.Types);\n\n\t\tcase DELETE_TYPES:\n\t\t\tconst st = state.dataTypes.filter(e => {\n\t\t\t\treturn e.NumClient !== action.id;\n\t\t\t});\n\t\t\tstate.dataTypes = [...st];\n\t\t\taxios.delete(urlHeader+\"Types/delete/\" + action.id).then((e) => console.log(e)).catch(err => console.log(\"error parsing:\\n\", err));\n\t\t\treturn Object.assign({}, state, state.dataTypes);\n\n\t\tcase UPDATE_TYPES:\n\t\t\tconst std1 = state.dataTypes.filter(e => {\n\t\t\t\treturn e.id !== action.id;\n\t\t\t});\n\t\t\tconst sto1 = action.data;\n\t\t\tstate.dataTypes = [\n\t\t\t\t...std1,\n\t\t\t\t...sto1\n\t\t\t];\n\t\t\taxios.put(urlHeader+\"Types/put/\" + action.id).then((e) => console.log(e)).catch(err => console.log(\"error parsing:\\n\", err));\n\n\t\t\treturn Object.assign({}, state, state.dataTypes);\n\n\t\tcase FETCH_TYPES:\n\t\t\tstate.dataTypes = [];\n\t\t  state.dataTypes = [\n\t\t    ...action.data\n\t\t  ];\n\t\t  return Object.assign({}, state, state.dataTypes);\n\n\t\tcase UPDATE_ONE:\n\t\t\tstate.one = action.data;\n\t\t\treturn Object.assign({}, state, state.one);\n\n\t\tcase ON_CHANGE_TYPES:\n\t\t\tstate.changes[action.data.name] = action.data.value;\n\t\t\treturn Object.assign({}, state, state.changes);\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default TypesReducers;\n"]},"metadata":{},"sourceType":"module"}