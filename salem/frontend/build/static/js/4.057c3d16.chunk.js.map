{"version":3,"sources":["Components/Clients/ChambresDetails/layouts/AnnexChambresDetails/AnnexChambresDetails.js"],"names":["ChambreCardPattern","lazy","AnnexChambresDetails","_isMounted","newStock","this","props","reserver","dataReserver","filter","e","d1","Date","dateDebutReservation","d2","dateFinReservation","d3","date1","d4","date2","d5","d6","stock","map","h","numReservation","newConcerner","concerner","dataConcerner","includes","nomChambre","chambres","newDataChambres","parseInt","prixChambre","slide","length","axios","get","urlHeader","then","res","data","state","numType","types","catch","err","console","log","fetchReserver","className","fallback","style","position","top","getChambrePrix","k","key","delay","Component","connect","clients","dispatch","updateOne","type","updateEroor","fetchchambres","updateSlide","updateDate1","updateDate2","fetchClients"],"mappings":"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","file":"static/js/4.057c3d16.chunk.js","sourcesContent":["import './statics/styles/Chambres.scss';\n\nimport {PanoramaFishEyeOutlined} from '@material-ui/icons';\nimport axios from 'axios';\nimport React, {lazy, Component, Suspense} from 'react';\nimport {connect} from 'react-redux';\nimport {urlHeader} from '../../../../../Actions/config';\n\nconst ChambreCardPattern = lazy(() => import ('./layouts/ChambreCardPattern/ChambreCardPattern'));\n\nclass AnnexChambresDetails extends Component {\n  _isMounted = false;\n\n  // otherGetChambrePrix(){\n  //   const stock = lazy(new Promise((resolve, reject) => {\n  //       return resolve(this.getChambrePrix());\n  //   }))\n  //   return stock;\n  // }\n  getChambrePrix() {\n    var reservation = this.props.reserver.dataReserver.filter((e) => {\n      const d1 = new Date(e.dateDebutReservation);\n      const d2 = new Date(e.dateFinReservation);\n      const d3 = this.props.reserver.date1;\n      const d4 = this.props.reserver.date2;\n      const d5 = d1 - d3 //si d5>0 d3 < d1\n      const d6 = d2 - d4 //si d6>0 d4 < d2\n      const d7 = d3 - d2 //si d7>0 d2 < d3\n      const d8 = d4 - d1 //si d8>0 d1 < d4\n\n      // d3 < d1 && d2 < d4                 d5>0 && d6<0\n      // d3 < d1 && d4 < d2  && d1 < d4     d5>0 && d6>0 && d8>0\n      // d1 < d3 && d4 < d2                 d5<0 && d6>0\n      // d1 < d3 && d2 < d4  && d3 < d2     d5<0 && d6<0 && d7<0\n\n      var stock = false;\n      if ((d5 > 0 && d6 < 0) || (d5 > 0 && d6 > 0 && d8 > 0) || (d5 < 0 && d6 > 0) || (d5 < 0 && d6 < 0 && d7 < 0)) {\n        stock = true;\n      }\n      return (stock);\n    })\n\n    const newStock = reservation.map((h) => {\n      return h.numReservation;\n    })\n\n    const concerner = this.props.concerner.dataConcerner.filter((e) => {\n      return newStock.includes(e.numReservation);\n    })\n\n    const newConcerner = concerner.map((e) => {\n      return e.nomChambre;\n    })\n\n    var chambres = this.props.chambres.newDataChambres.filter((e) => {\n      return ((parseInt(e.prixChambre) <= parseInt(this.props.chambres.slide)) && (!newConcerner.includes(e.nomChambre)))\n    })\n    return chambres\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    if (this.props.chambres.newDataChambres.length === 0) {\n      axios.get(urlHeader+\"Chambres/get\").then(res => res.data).then(state => {\n        return this.props.newDataChambres(state.filter(e => e.numType === parseInt(this.props.types)))\n      }).catch(err => console.log(\"error parsing:\\n\", err));\n    }\n    if (this.props.reserver.dataReserver.length === 0) {\n      axios.get(urlHeader + \"Reservation/get\").then(res => res.data).then(state => this.props.fetchReserver(state)).catch(err => console.log(\"error parsing:\\n\", err));\n    }\n  }\n\n  // devient active quand cette component est demonter\n  componentWillUnmount() {\n    this._isMounted = false;\n    this.props.newDataChambres([])\n  }\n\n  render() {\n    return (<div className=\"AllListChambre\">\n      <Suspense fallback={<div style = {{position: 'relative', top: 100}} > <PanoramaFishEyeOutlined className=\"loading\"/></div>}>\n      {/* {console.log(this.getChambrePrix())} */}\n        {\n          this.getChambrePrix().length !== 0\n            ? (this.getChambrePrix().map((e, k) => {\n              return <div key={e.nomChambre}>\n                <ChambreCardPattern data={e} delay={k} key={e.nomChambre}/>\n              </div>\n            }))\n            : (<h1 style={{\n                position: 'relative',\n                top: 100\n              }}>Ces types de chambres n'existent pas chez nous</h1>)\n        }\n        </Suspense>\n        </div>);\n  }\n}\nconst mapStateToProps = state => {\n  return {chambres: state.chambres, reserver: state.reserver, concerner: state.concerner, clients: state.clients}\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateOne: (data) => {\n      dispatch({type: \"UPDATE_ONE\", data});\n    },\n    updateEroor: (data) => {\n      dispatch({type: \"UPDATE_EROOR\", data: data});\n    },\n    fetchchambres: (data) => {\n      dispatch({type: \"FETCH_CHAMBRES\", data: data});\n    },\n    updateSlide: (data) => {\n      dispatch({type: \"ON_CHANGE_SLIDER\", data: data});\n    },\n    updateDate1: (data) => {\n      dispatch({type: \"UPDATE_DATE_1\", data: data});\n    },\n    updateDate2: (data) => {\n      dispatch({type: \"UPDATE_DATE_2\", data: data});\n    },\n    fetchClients: (data) => {\n      dispatch({type: \"FETCH_CLIENTS\", data: data});\n    },\n    newDataChambres: (data) => {\n      dispatch({type: \"NEW_DATA_CHAMBRES\", data: data});\n    },\n    fetchReserver: (data) => {\n      dispatch({\n        type: \"FETCH_RESERVER\",\n        data: data\n      });\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AnnexChambresDetails);\n"],"sourceRoot":""}