{"ast":null,"code":"var _jsxFileName = \"/home/files/hybrid_pojects/SALEM/frontend/src/Components/Clients/Principal/layouts/Chambres/Chambres.js\";\nimport React, { Component } from 'react';\nimport './statics/styles/Chambres.scss';\nimport ChambreCard from './layouts/ChambreCard/ChambreCard';\nimport { Paper } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { urlHeader } from '../../../../../Actions/config';\n\nclass Chambres extends Component {\n  componentDidMount() {\n    if (this.props.types.dataTypes.length === 0) {\n      axios.get(urlHeader + \"Types/get\").then(res => res.data).then(state => this.props.fetchtypes(state)).catch(err => console.log(\"error parsing:\\n\", err));\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Chambres\",\n      id: \"chambres\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"textAligne\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"LES CHAMBRES DISPONIBLES\"), React.createElement(\"div\", {\n      className: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, this.props.types.dataTypes.length !== 0 ? this.props.types.dataTypes.map(e => {\n      return React.createElement(Paper, {\n        key: e.nomType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(ChambreCard, {\n        url: e.imagesType,\n        nomCategorie: e.nomType,\n        numCategorie: e.numType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }));\n    }) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"desole, il n'y a pas de chambres disponibles\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    types: state.types\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateOne: data => {\n      dispatch({\n        type: \"UPDATE_ONE\",\n        data\n      });\n    },\n    updateEroor: data => {\n      dispatch({\n        type: \"UPDATE_EROOR\",\n        data: data\n      });\n    },\n    fetchtypes: data => {\n      dispatch({\n        type: \"FETCH_TYPES\",\n        data: data\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chambres);","map":{"version":3,"sources":["/home/files/hybrid_pojects/SALEM/frontend/src/Components/Clients/Principal/layouts/Chambres/Chambres.js"],"names":["React","Component","ChambreCard","Paper","connect","axios","urlHeader","Chambres","componentDidMount","props","types","dataTypes","length","get","then","res","data","state","fetchtypes","catch","err","console","log","render","map","e","nomType","imagesType","numType","mapStateToProps","mapDispatchToProps","dispatch","updateOne","type","updateEroor"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,gCAAP;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,SAAQC,KAAR,QAAoB,mBAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,+BAAxB;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAC/BO,EAAAA,iBAAiB,GAAG;AACpB,QAAI,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,SAAjB,CAA2BC,MAA3B,KAAoC,CAAxC,EAA2C;AAC1CP,MAAAA,KAAK,CAACQ,GAAN,CAAUP,SAAS,GAAC,WAApB,EAAiCQ,IAAjC,CAAsCC,GAAG,IAAIA,GAAG,CAACC,IAAjD,EAAuDF,IAAvD,CAA4DG,KAAK,IAAI,KAAKR,KAAL,CAAWS,UAAX,CAAsBD,KAAtB,CAArE,EAAmGE,KAAnG,CAAyGC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,GAAhC,CAAhH;AACA;AACD;;AACAG,EAAAA,MAAM,GAAG;AACP,WAAQ;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,EAAE,EAAC,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACN;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADM,EAEN;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKd,KAAL,CAAWC,KAAX,CAAiBC,SAAjB,CAA2BC,MAA3B,KAAoC,CAApC,GAAuC,KAAKH,KAAL,CAAWC,KAAX,CAAiBC,SAAjB,CAA2Ba,GAA3B,CAAgCC,CAAD,IAAK;AACzE,aACE,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAEA,CAAC,CAACC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAa,QAAA,GAAG,EAAED,CAAC,CAACE,UAApB;AAAgC,QAAA,YAAY,EAAEF,CAAC,CAACC,OAAhD;AAAyD,QAAA,YAAY,EAAED,CAAC,CAACG,OAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD,KANsC,CAAvC,GAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDARR,CAFM,CAAR;AAcD;;AArB8B;;AAwBjC,MAAMC,eAAe,GAAGZ,KAAK,IAAI;AAChC,SAAO;AAACP,IAAAA,KAAK,EAAEO,KAAK,CAACP;AAAd,GAAP;AACA,CAFD;;AAIA,MAAMoB,kBAAkB,GAAGC,QAAQ,IAAI;AACtC,SAAO;AACJC,IAAAA,SAAS,EAAGhB,IAAD,IAAU;AACnBe,MAAAA,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAE,YAAP;AAAqBjB,QAAAA;AAArB,OAAD,CAAR;AACD,KAHG;AAINkB,IAAAA,WAAW,EAAGlB,IAAD,IAAU;AACtBe,MAAAA,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAE,cAAP;AAAuBjB,QAAAA,IAAI,EAAEA;AAA7B,OAAD,CAAR;AACA,KANK;AAONE,IAAAA,UAAU,EAAGF,IAAD,IAAU;AACrBe,MAAAA,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAE,aAAP;AAAsBjB,QAAAA,IAAI,EAAEA;AAA5B,OAAD,CAAR;AACA;AATK,GAAP;AAWA,CAZD;;AAcA,eAAeZ,OAAO,CAACyB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CvB,QAA7C,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport './statics/styles/Chambres.scss';\nimport ChambreCard from './layouts/ChambreCard/ChambreCard';\nimport {Paper} from '@material-ui/core';\nimport {connect} from 'react-redux';\nimport axios from 'axios';\nimport {urlHeader} from '../../../../../Actions/config';\n\nclass Chambres extends Component {\n  componentDidMount() {\n\t\tif (this.props.types.dataTypes.length===0) {\n\t\t\taxios.get(urlHeader+\"Types/get\").then(res => res.data).then(state => this.props.fetchtypes(state)).catch(err => console.log(\"error parsing:\\n\", err));\n\t\t}\n\t}\n  render() {\n    return (<div className='Chambres' id='chambres'>\n      <h1 className='textAligne'>LES CHAMBRES DISPONIBLES</h1>\n      <div className='list'>\n        {\n          this.props.types.dataTypes.length!==0? this.props.types.dataTypes.map((e)=>{\n            return (\n              <Paper key={e.nomType}>\n                <ChambreCard url={e.imagesType} nomCategorie={e.nomType} numCategorie={e.numType}/>\n      \t\t\t\t</Paper>\n            )\n          }): <p>desole, il n'y a pas de chambres disponibles</p>\n        }\n      </div>\n    </div>);\n  }\n}\n\nconst mapStateToProps = state => {\n\treturn {types: state.types}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n    updateOne: (data) => {\n      dispatch({type: \"UPDATE_ONE\", data});\n    },\n\t\tupdateEroor: (data) => {\n\t\t\tdispatch({type: \"UPDATE_EROOR\", data: data});\n\t\t},\n\t\tfetchtypes: (data) => {\n\t\t\tdispatch({type: \"FETCH_TYPES\", data: data});\n\t\t}\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chambres);\n"]},"metadata":{},"sourceType":"module"}