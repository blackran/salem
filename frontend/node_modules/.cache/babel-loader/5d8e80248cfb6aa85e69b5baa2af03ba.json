{"ast":null,"code":"// import axios from 'axios';\nimport shortid from 'shortid';\nimport { ADD_CLIENTS, DELETE_CLIENTS, UPDATE_CLIENTS, FETCH_CLIENTS, UPDATE_ONE, ON_CHANGE_CLIENT, UPDATE_NAME_CLIENT } from '../Actions/typesProduits'; // import {urlHeader} from '../Actions/config';\n\nconst initState = {\n  dataProduits: [{\n    numproduit: 1,\n    imagenameproduit: \"blackran\",\n    nomproduit: \"stylo\",\n    prixproduit: \"500\",\n    qtproduit: \"5\"\n  }, {\n    numproduit: 2,\n    imagenameproduit: \"blackran\",\n    nomproduit: \"cahier\",\n    prixproduit: \"1000\",\n    qtproduit: \"15\"\n  }],\n  mocksClients: '',\n  one: true,\n  submitReusit: true,\n  changes: {\n    NumClient: \"\",\n    NomClient: \"\",\n    AddressClient: \"\",\n    CpClient: \"\",\n    PaysClient: \"\",\n    TelClient: \"\",\n    EmailClient: \"\",\n    AnneeCreClient: \"\"\n  }\n};\n\nconst ClientsReducers = (state = initState, action) => {\n  switch (action.type) {\n    case ADD_CLIENTS:\n      state.changes[\"NumClient\"] = shortid.generate();\n      state.changes[\"AnneeCreClient\"] = new Date().getFullYear(); // const std = [{\n      // \t...state.changes\n      // }]\n      // axios.post(\n      // \t\"http://localhost/myprojects/backend/Clients/post\",\n      // \tstd,\n      // \t{\n      //       headers: {\n      // \t\t\t'Accept': 'application/json',\n      //       'Content-Type': 'application/x-www-form-urlencoded'\n      //       }\n      //     }\n      // ).then(h => console.log(h)).catch(err => console.log(\"error parsing:\\n\", err));\n\n      state.dataClients = [...state.dataClients, state.changes];\n      return Object.assign({}, state, state.Clients);\n\n    case DELETE_CLIENTS:\n      console.log(state);\n      const st = state.dataClients.filter(e => {\n        return e.NumClient !== action.id;\n      });\n      state.dataClients = [...st]; // axios.delete(\"http://localhost/myprojects/backend/Clients/delete/\" + action.id,{\n      // \t\theaders: {\n      // \t\t\t'Accept': 'application/json',\n      // \t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n      // \t\t}\n      // \t}).then((e) => console.log(e)).catch(err => console.log(\"error parsing:\\n\", err));\n\n      return Object.assign({}, state, state.dataClients);\n\n    case UPDATE_CLIENTS:\n      const std1 = state.dataClients.filter(e => {\n        return e.id !== action.id;\n      });\n      const sto1 = action.data;\n      state.dataClients = [...std1, ...sto1]; // axios.put(\"http://localhost/myprojects/backend/Clients/put/\" + action.id).then((e) => console.log(e)).catch(err => console.log(\"error parsing:\\n\", err));\n\n      return Object.assign({}, state, state.dataClients);\n\n    case FETCH_CLIENTS:\n      state.dataClients = [];\n      state.dataClients = [...action.data];\n      return Object.assign({}, state, state.dataClients);\n\n    case UPDATE_ONE:\n      state.one = action.data;\n      return Object.assign({}, state, state.one);\n\n    case ON_CHANGE_CLIENT:\n      console.log('ON_CHANGE_CLIENT');\n      state.changes[action.data.name] = action.data.value;\n      return Object.assign({}, state, state.changes);\n\n    case UPDATE_NAME_CLIENT:\n      if (state.changes !== undefined) {\n        state.changes[\"NomClient\"] = action.data;\n      }\n\n      return Object.assign({}, state, state.changes);\n\n    default:\n      return state;\n  }\n};\n\nexport default ClientsReducers;","map":{"version":3,"sources":["/home/files/hybrid_pojects/SALEM/frontend/src/reducers/ProduitsReducers.js"],"names":["shortid","ADD_CLIENTS","DELETE_CLIENTS","UPDATE_CLIENTS","FETCH_CLIENTS","UPDATE_ONE","ON_CHANGE_CLIENT","UPDATE_NAME_CLIENT","initState","dataProduits","numproduit","imagenameproduit","nomproduit","prixproduit","qtproduit","mocksClients","one","submitReusit","changes","NumClient","NomClient","AddressClient","CpClient","PaysClient","TelClient","EmailClient","AnneeCreClient","ClientsReducers","state","action","type","generate","Date","getFullYear","dataClients","Object","assign","Clients","console","log","st","filter","e","id","std1","sto1","data","name","value","undefined"],"mappings":"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","sourcesContent":["// import axios from 'axios';\nimport shortid from 'shortid';\nimport {ADD_CLIENTS, DELETE_CLIENTS, UPDATE_CLIENTS, FETCH_CLIENTS, UPDATE_ONE, ON_CHANGE_CLIENT, UPDATE_NAME_CLIENT} from '../Actions/typesProduits';\n// import {urlHeader} from '../Actions/config';\n\nconst initState = {\n\tdataProduits: [\n\t\t{\n\t\t\tnumproduit: 1,\n\t\t\timagenameproduit: \"blackran\",\n\t\t\tnomproduit: \"stylo\",\n\t\t\tprixproduit: \"500\",\n\t\t\tqtproduit: \"5\"\n\t\t},\n\t\t{\n\t\t\tnumproduit: 2,\n\t\t\timagenameproduit: \"blackran\",\n\t\t\tnomproduit: \"cahier\",\n\t\t\tprixproduit: \"1000\",\n\t\t\tqtproduit: \"15\"\n\t\t}\n\t],\n\tmocksClients: '',\n\tone: true,\n\tsubmitReusit: true,\n\tchanges : {\n\t\tNumClient: \"\",\n\t\tNomClient: \"\",\n\t\tAddressClient: \"\",\n\t\tCpClient: \"\",\n\t\tPaysClient: \"\",\n\t\tTelClient: \"\",\n\t\tEmailClient: \"\",\n\t\tAnneeCreClient: \"\"\n\t}\n}\n\nconst ClientsReducers = (state = initState, action) => {\n\tswitch (action.type) {\n\t\tcase ADD_CLIENTS:\n\t\t\tstate.changes[\"NumClient\"] = shortid.generate();\n\t\t\tstate.changes[\"AnneeCreClient\"] = new Date().getFullYear();\n\t\t\t// const std = [{\n\t\t\t// \t...state.changes\n\t\t\t// }]\n\n\t\t\t// axios.post(\n\t\t\t// \t\"http://localhost/myprojects/backend/Clients/post\",\n\t\t\t// \tstd,\n\t\t\t// \t{\n      //       headers: {\n\t\t\t// \t\t\t'Accept': 'application/json',\n      //       'Content-Type': 'application/x-www-form-urlencoded'\n      //       }\n      //     }\n\t\t\t// ).then(h => console.log(h)).catch(err => console.log(\"error parsing:\\n\", err));\n\t\t\tstate.dataClients = [\n\t\t\t\t...state.dataClients, state.changes\n\t\t\t];\n\t\t\treturn Object.assign({}, state, state.Clients);\n\n\t\tcase DELETE_CLIENTS:\n\t\t\tconsole.log(state)\n\t\t\tconst st = state.dataClients.filter(e => {\n\t\t\t\treturn e.NumClient !== action.id;\n\t\t\t});\n\t\t\tstate.dataClients = [...st];\n\t\t\t// axios.delete(\"http://localhost/myprojects/backend/Clients/delete/\" + action.id,{\n\t\t\t// \t\theaders: {\n\t\t\t// \t\t\t'Accept': 'application/json',\n\t\t\t// \t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t// \t\t}\n\t\t\t// \t}).then((e) => console.log(e)).catch(err => console.log(\"error parsing:\\n\", err));\n\t\t\treturn Object.assign({}, state, state.dataClients);\n\n\t\tcase UPDATE_CLIENTS:\n\t\t\tconst std1 = state.dataClients.filter(e => {\n\t\t\t\treturn e.id !== action.id;\n\t\t\t});\n\t\t\tconst sto1 = action.data;\n\t\t\tstate.dataClients = [\n\t\t\t\t...std1,\n\t\t\t\t...sto1\n\t\t\t];\n\t\t\t// axios.put(\"http://localhost/myprojects/backend/Clients/put/\" + action.id).then((e) => console.log(e)).catch(err => console.log(\"error parsing:\\n\", err));\n\n\t\t\treturn Object.assign({}, state, state.dataClients);\n\n\t\tcase FETCH_CLIENTS:\n\t\t\tstate.dataClients = [];\n\t\t\tstate.dataClients = [\n\t\t\t\t...action.data\n\t\t  ];\n\t\t  return Object.assign({}, state, state.dataClients);\n\n\t\tcase UPDATE_ONE:\n\t\t\tstate.one = action.data;\n\t\t\treturn Object.assign({}, state, state.one);\n\n\t\tcase ON_CHANGE_CLIENT:\n\t\t\tconsole.log('ON_CHANGE_CLIENT')\n\t\t\tstate.changes[action.data.name] = action.data.value;\n\t\t\treturn Object.assign({}, state, state.changes);\n\n\t\tcase UPDATE_NAME_CLIENT:\n\t\t\tif(state.changes!==undefined){\n\t\t\t\tstate.changes[\"NomClient\"] = action.data\n\t\t\t}\n\t\t\treturn Object.assign({}, state, state.changes);\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default ClientsReducers;\n"]},"metadata":{},"sourceType":"module"}